{"version":3,"file":"static/js/907.4b1e88b4.chunk.js","mappings":"yQAKMA,EAAmB,CACrBC,SAAU,8BAGRC,EAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAuFxB,UApF+B,SAACE,GAC5B,IAAMC,GAAeC,EAAAA,EAAAA,MACfC,EAAQ,yCAAG,WAAOC,GAAW,+FAErBH,GAASI,EAAAA,EAAAA,IAA0BD,IAAS,KAAD,EACjDE,EAAAA,GAAAA,QAAgB,eAAD,OAAMF,EAAOG,QAAO,uBACnCC,IAAe,gDAEfF,EAAAA,GAAAA,MAAc,KAAEA,SAAS,yDAGhC,gBATa,sCAURE,EAAe,WACjBR,EAAMS,sBAAqB,GAC3BC,GACJ,EACA,EAAeC,EAAAA,EAAAA,UAARC,GAAsB,YAAlB,GACLF,EAAU,WACZE,EAAKC,aACT,EAMA,OALAC,EAAAA,EAAAA,YAAU,WACHd,EAAMe,MACLH,EAAKI,eAAehB,EAAMe,KAElC,GAAE,CAACf,EAAMe,QAEL,+BACI,UAAC,IAAK,CAACE,MAAM,2BACNC,KAAMlB,EAAMmB,kBACZC,SAAUZ,EACVa,UAAQ,EACRC,OAAQ,KACRC,MAAM,EAAK,WAEd,SAAC,IAAO,KACR,UAAC,KAAI,kBAAM3B,GAAM,IACV4B,OAAO,EACPZ,KAAMA,EACNa,KAAK,oBACLtB,SAAUA,EACVT,iBAAkBA,EAAiB,WACtC,SAAC,SAAS,CAAC+B,KAAK,KAAKC,MAAM,KAAKC,QAAQ,EAAK,UACzC,SAAC,IAAK,OAEV,SAAC,SAAS,CAACF,KAAK,UAAUC,MAAM,2BACrBE,MAAO,CAAC,CAAEjC,UAAU,EAChBkC,IAAI,EACJC,IAAI,GACJxB,QAAQ,uFACT,UACV,SAAC,IAAK,OAEV,SAAC,SAAS,CAACmB,KAAK,UAAUC,MAAM,2BAAOE,MAAO,CAAC,CAAEjC,UAAU,IAAQ,UAC/D,SAAC,IAAK,OAEV,SAAC,SAAS,CAAC8B,KAAK,SAASC,MAAM,8BACpBE,MAAO,CAAC,CAAEjC,UAAU,EAChBoC,QAAQ,wFACRzB,QAAQ,8DACT,UACV,SAAC,IAAK,OAEV,SAAC,SAAS,CAACmB,KAAK,eAAeC,MAAM,iCAAQE,MAAO,CAAC,CAAEjC,UAAU,IAAO,UACpE,SAAC,IAAK,OAEV,SAAC,SAAS,CAAC8B,KAAM,gBAAgBC,MAAM,iCAC5BE,MAAO,CAAC,CAAEjC,UAAU,EAChBoC,QAAQ,6EACRzB,QAAQ,iEACT,UACV,SAAC,IAAK,OAEV,SAAC,SAAS,CAACP,YAAU,kBAAOH,EAAOG,YAAU,IAAEiC,OAAQ,IAAI,UACvD,UAAC,IAAK,YACF,SAAC,IAAM,CAACC,KAAK,UAAUC,SAAS,SAAQ,SAAC,kBACzC,SAAC,IAAM,CAACA,SAAS,SAASC,QAASzB,EAAQ,SAAE,8BAOzE,C","sources":["pages/Hospital/HospitalSet/components/HospitalSetUpdateModel.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {putHospitalSetUpdateAsync} from \"@/store/slices/hospital\";\r\nimport {Button, Divider, Form, Input, message, Modal, Space} from \"antd\";\r\n\r\nconst validateMessages = {\r\n    required: '请输入${label}'\r\n};\r\n\r\nconst layout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 16 }\r\n};\r\n\r\nconst HospitalSetUpdateModel = (props:any) => {\r\n    const dispatch:any = useDispatch();\r\n    const onFinish = async (values: any) => {\r\n        try{\r\n            await dispatch(putHospitalSetUpdateAsync(values));\r\n            message.success(`修改${values.hosname}成功！`)\r\n            handleCancel();\r\n        }catch(e:any){\r\n            message.error(e.message);\r\n        }\r\n\r\n    };\r\n    const handleCancel = () => {\r\n        props.setIsModalOpenUpdate(false);\r\n        onReset();\r\n    };\r\n    const [form] = Form.useForm();\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    };\r\n    useEffect(()=>{\r\n        if(props.info){\r\n            form.setFieldsValue(props.info);\r\n        }\r\n    },[props.info])\r\n    return (\r\n        <>\r\n            <Modal title=\"修改医院\"\r\n                   open={props.isModalOpenUpdate}\r\n                   onCancel={handleCancel}\r\n                   centered\r\n                   footer={null}\r\n                   mask={true}\r\n            >\r\n                <Divider />\r\n                <Form  {...layout}\r\n                       colon={true}\r\n                       form={form}\r\n                       name=\"hospital-messages\"\r\n                       onFinish={onFinish}\r\n                       validateMessages={validateMessages}>\r\n                    <Form.Item name='id' label=\"id\" hidden={true}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name='hosname' label=\"医院名称\"\r\n                               rules={[{ required: true,\r\n                                   min:4,\r\n                                   max:20,\r\n                                   message:\"请输入4-20字数之间的医院名称！\"\r\n                               }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name='hoscode' label=\"医院编号\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name='apiUrl' label=\"api基础地址\"\r\n                               rules={[{ required: true,\r\n                                   pattern:/^https?:\\/\\/(([a-zA-Z0-9_-])+(\\.)?)*(:\\d+)?(\\/((\\.)?(\\?)?=?&?[a-zA-Z0-9_-](\\?)?)*)*$/i,\r\n                                   message:\"请输入正确的URL地址！\"\r\n                               }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name='contactsName' label=\"联系人姓名\" rules={[{ required: true}]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name= 'contactsPhone' label=\"联系人手机\"\r\n                               rules={[{ required: true,\r\n                                   pattern:/^(0|86|17951)?(13[0-9]|15[012356789]|166|17[3678]|18[0-9]|14[57])[0-9]{8}$/,\r\n                                   message:\"请输入正确的手机号！\"\r\n                               }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 6 }}>\r\n                        <Space >\r\n                            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n                            <Button htmlType=\"button\" onClick={onReset} >重置</Button>\r\n                        </Space>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HospitalSetUpdateModel;"],"names":["validateMessages","required","layout","labelCol","span","wrapperCol","props","dispatch","useDispatch","onFinish","values","putHospitalSetUpdateAsync","message","hosname","handleCancel","setIsModalOpenUpdate","onReset","Form","form","resetFields","useEffect","info","setFieldsValue","title","open","isModalOpenUpdate","onCancel","centered","footer","mask","colon","name","label","hidden","rules","min","max","pattern","offset","type","htmlType","onClick"],"sourceRoot":""}